var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _imgIconsSvg = require('../../img/icons.svg');
var _imgIconsSvgDefault = _parcelHelpers.interopDefault(_imgIconsSvg);
require('fractional');
var _viewJs = require('./view.js');
var _viewJsDefault = _parcelHelpers.interopDefault(_viewJs);
class PaginationView extends _viewJsDefault.default {
  _parentElement = document.querySelector('.pagination');
  _data;
  addHandlerClick(handler) {
    this._parentElement.addEventListener('click', function (e) {
      const btn = e.target.closest('.btn--inline');
      if (!btn) return;
      const gotToPage = +btn.dataset.goto;
      handler(goToPage);
    });
  }
  generateMarkup() {
    const currentPage = this._data.page;
    const numPages = Math.ceil(this._data.results.length / this._data.resultsPerPage);
    // Page 1 and there are other pages
    if (currentPage === 1 && numPages > 1) {
      return `
        <button data-goto="${currentPage + 1}" class="btn--inline pagination__btn--next">
        <span>Page ${currentPage + 1}</span>
        <svg class="search__icon">
            <use href="${_imgIconsSvgDefault.default}#icon-arrow-right"></use>
        </svg>
        </button>
        `;
    }
    // Last page
    if (currentPage === numPages && numPages > 1) {
      return `
        <button data-goto="${currentPage - 1}" class="btn--inline pagination__btn--prev">
        <svg class="search__icon">
            <use href="${_imgIconsSvgDefault.default}#icon-arrow-left"></use>
        </svg>
        <span>Page ${currentPage - 1}</span>
        </button>
        `;
    }
    // Other page
    if (currentPage < numPages) {
      return `
        <button data-goto="${currentPage - 1}" class="btn--inline pagination__btn--prev">
        <svg class="search__icon">
            <use href="${_imgIconsSvgDefault.default}#icon-arrow-left"></use>
        </svg>
        <span>Page ${currentPage - 1}</span>
        </button>
        <button data-goto="${currentPage + 1}" class="btn--inline pagination__btn--next">
        <span>Page ${currentPage + 1}</span>
        <svg class="search__icon">
            <use href="${_imgIconsSvgDefault.default}#icon-arrow-right"></use>
        </svg>
        </button>
        `;
    }
    // Page 1 and there are NO other pages
    return '';
  }
}
exports.default = new PaginationView();
